{\rtf1\ansi\ansicpg1251\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22880\viewh13520\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 macbook@MacBook-Pro news_project % python3 -m venv venv\
macbook@MacBook-Pro news_project % source venv/bin/activate\
(venv) macbook@MacBook-Pro news_project % pip list\
Package    Version\
---------- -------\
pip        23.0\
setuptools 67.2.0\
\
[notice] A new release of pip is available: 23.0 -> 23.0.1\
[notice] To update, run: pip install --upgrade pip\
(venv) macbook@MacBook-Pro news_project % pip install django\
Collecting django\
  Using cached Django-4.1.7-py3-none-any.whl (8.1 MB)\
Collecting sqlparse>=0.2.2\
  Using cached sqlparse-0.4.3-py3-none-any.whl (42 kB)\
Collecting asgiref<4,>=3.5.2\
  Using cached asgiref-3.6.0-py3-none-any.whl (23 kB)\
Installing collected packages: sqlparse, asgiref, django\
Successfully installed asgiref-3.6.0 django-4.1.7 sqlparse-0.4.3\
\
[notice] A new release of pip is available: 23.0 -> 23.0.1\
[notice] To update, run: pip install --upgrade pip\
(venv) macbook@MacBook-Pro news_project % django-admin startproject NewsPaper\
(venv) macbook@MacBook-Pro news_project % cd NewsPaper\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py startapp news\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py makemigrations\
No changes detected\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py migrate\
Operations to perform:\
  Apply all migrations: admin, auth, contenttypes, sessions\
Running migrations:\
  Applying contenttypes.0001_initial... OK\
  Applying auth.0001_initial... OK\
  Applying admin.0001_initial... OK\
  Applying admin.0002_logentry_remove_auto_add... OK\
  Applying admin.0003_logentry_add_action_flag_choices... OK\
  Applying contenttypes.0002_remove_content_type_name... OK\
  Applying auth.0002_alter_permission_name_max_length... OK\
  Applying auth.0003_alter_user_email_max_length... OK\
  Applying auth.0004_alter_user_username_opts... OK\
  Applying auth.0005_alter_user_last_login_null... OK\
  Applying auth.0006_require_contenttypes_0002... OK\
  Applying auth.0007_alter_validators_add_error_messages... OK\
  Applying auth.0008_alter_user_username_max_length... OK\
  Applying auth.0009_alter_user_last_name_max_length... OK\
  Applying auth.0010_alter_group_name_max_length... OK\
  Applying auth.0011_update_proxy_permissions... OK\
  Applying auth.0012_alter_user_first_name_max_length... OK\
  Applying sessions.0001_initial... OK\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py shell\
Python 3.10.10 (main, Feb  8 2023, 05:32:04) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
>>> from news.models import *\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
  File "/Users/macbook/PycharmProjects/news_project/NewsPaper/news/models.py", line 6, in <module>\
    class Author(models.Model):\
  File "/Users/macbook/PycharmProjects/news_project/venv/lib/python3.10/site-packages/django/db/models/base.py", line 132, in __new__\
    raise RuntimeError(\
RuntimeError: Model class news.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\
>>> \
zsh: suspended  python3 manage.py shell\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py makemigrations\
Migrations for 'news':\
  news/migrations/0001_initial.py\
    - Create model Author\
    - Create model Category\
    - Create model Post\
    - Create model PostCategory\
    - Add field postCategory to post\
    - Create model Comment\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py migrate\
Operations to perform:\
  Apply all migrations: admin, auth, contenttypes, news, sessions\
Running migrations:\
  Applying news.0001_initial... OK\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py migrate\
Operations to perform:\
  Apply all migrations: admin, auth, contenttypes, news, sessions\
Running migrations:\
  No migrations to apply.\
(venv) macbook@MacBook-Pro NewsPaper % python3 manage.py shell\
Python 3.10.10 (main, Feb  8 2023, 05:32:04) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
>>> from news.models import *\
>>> u1 = User.objects.create_user(username='Victoria')\
>>> u1\
<User: Victoria>\
>>> u2 = User.objects.create_user(username='Andrew')\
>>> u2\
<User: Andrew>\
>>> Author.objects.create(authorUser=u1)\
<Author: Author object (1)>\
>>> Author.objects.create(authorUser=u2)\
<Author: Author object (2)>\
>>> Category.objects.create(name='IT')\
<Category: Category object (1)>\
>>> Category.objects.create(name='Tech')\
<Category: Category object (2)>\
>>> Category.objects.create(name='Jurisprudence')\
<Category: Category object (3)>\
>>> Category.objects.create(name='Finance')\
<Category: Category object (4)>\
>>> author1 = Author.objects.get(id=1)\
>>> author1\
<Author: Author object (1)>\
>>> author2 = Author.objects.get(id=2)\
>>> author2\
<Author: Author object (2)>\
>>> Post.objects.create(author=author1, categoryType = 'NW', title='sometitle1', text='somebigtext1')\
<Post: Post object (1)>\
>>> Post.objects.get(id=1).title\
'sometitle1'\
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1), Category.objects.get(id=2))\
>>> Post.objects.get(id=1).postCategory\
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x104c55ed0>\
>>> Post.objects.create(author=author1, categoryType='AR', title='sometitle2', text='somebigtext2')\
<Post: Post object (2)>\
>>> Post,objects.get(id=2).text\
Traceback (most recent call last):\
  File "<console>", line 1, in <module>\
NameError: name 'objects' is not defined\
>>> Post.objects.get(id=2).text\
'somebigtext2'\
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3), Category.objects.get(id=4))\
>>> Post.objects.create(author=author2, categoryType='AR', title='sometitle3', text='somebigtext3')\
<Post: Post object (3)>\
>>> Post.objects.get(id=3).title\
'sometitle3'\
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=1), Category.objects.get(id=3))\
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='anytextbyauthor1')\
<Comment: Comment object (1)>\
>>> Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=2).authorUser, text='anytextsbyauthor2')\
<Comment: Comment object (2)>\
>>> Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=1).authorUser, text = 'anytextbyauthor3')\
<Comment: Comment object (3)>\
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=2).authorUser, text = 'anytextbyauthor4')\
<Comment: Comment object (4)>\
>>> Post.objects.get(id=1).like()\
>>> Post.objects.get(id=2).like()\
>>> Post.objects.get(id=3).like()\
>>> Post.objects.get(id=1).dislike()\
>>> Post.objects.get(id=1).dislike()\
>>> Post.objects.get(id=2).dislike()\
>>> Post.objects.get(id=3).dislike()\
>>> Post.objects.get(id=1).rating\
-1\
>>> Post.objects.get(id=2).rating\
0\
>>> Post.objects.get(id=2).like()\
>>> Post.objects.get(id=2).rating \
1\
>>> Post.objects.get(id=3).dislike()\
>>> Post.objects.get(id=3).dislike()\
>>> Post.objects.get(id=3).rating\
-2\
>>> Comment.objects.get(id=1).dislike()\
>>> Comment.objects.get(id=1).dislike()\
>>> Comment.objects.get(id=1).dislike()\
>>> Comment.objects.get(id=1).rating\
-3\
>>> Comment.objects.get(id=2).like()\
>>> Comment.objects.get(id=2).like()\
>>> Comment.objects.get(id=2).like()\
>>> Comment.objects.get(id=2).like()\
>>> Comment.objects.get(id=2).rating\
4\
>>> Comment.objects.get(id=3).like()\
>>> Comment.objects.get(id=3).like()\
>>> Comment.objects.get(id=3).dislike()\
>>> Comment.objects.get(id=3).rating\
1\
>>> Comment.objects.get(id=4).like()\
>>> Comment.objects.get(id=4).dislike()\
>>> Comment.objects.get(id=4).dislike()\
>>> Comment.objects.get(id=4).dislike()\
>>> Comment.objects.get(id=4).dislike()\
>>> Comment.objects.get(id=4).rating\
-3\
>>> Author.objects.get(id=1).update_rating()\
>>> Author.objects.get(id=1).ratingAuthor\
-2\
>>> Author.objects.get(id=2).update_rating()\
>>> Author.objects.get(id=2).ratingAuthor\
-5\
>>> a = Author.objects.order_by('-ratingAuthor')\
>>> a\
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>\
>>> a = Author.objects.order_by('-ratingAuthor')[:1]\
>>> a\
<QuerySet [<Author: Author object (1)>]>\
>>> for i in a:\
...     i.ratingAuthor\
...     i.authorUser.username\
... \
-2\
'Victoria'\
>>> b = Post.objects.order_by('-rating').values('dateCreation', 'author__authorUser__username', 'rating', 'title')[0]\
>>> b\
\{'dateCreation': datetime.datetime(2023, 2, 19, 11, 22, 52, 387785, tzinfo=datetime.timezone.utc), 'author__authorUser__username': 'Victoria', 'rating': 1, 'title': 'sometitle2'\}\
>>> c = Post.objects.order_by('-rating')[0].preview()\
>>> c\
'somebigtext2...'\
>>> d = Post.objects.order_by('-rating')[0].comment_set.all().values('dateCreation', 'commentUser__username', 'rating', 'text')\
>>> d\
<QuerySet [\{'dateCreation': datetime.datetime(2023, 2, 19, 11, 38, 17, 439933, tzinfo=datetime.timezone.utc), 'commentUser__username': 'Andrew', 'rating': 4, 'text': 'anytextsbyauthor2'\}]>\
>>> \
}